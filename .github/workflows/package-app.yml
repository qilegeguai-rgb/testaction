name: Build PySide6 Application

on:
  push:
    branches:
      - master  # 当推送到主分支时触发
    tags:
      - "v*"  # 当推送以 "v" 开头的标签时触发
  pull_request:
    branches:
      - master  # 在 PR 提交时触发，针对主分支

jobs:
  build:
    runs-on: windows-latest  # 使用 Windows 环境

    steps:
    # Step 1: 检查出代码
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # 指定 Python 版本

    # Step 3: 安装依赖
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: 打包程序
    - name: Build Executable
      run: |
        pip install pyinstaller
        pyinstaller --onefile main.py

    # Step 5: 保存打包结果到 Artifacts
    - name: Upload Executable
      uses: actions/upload-artifact@v4
      with:
        name: PySide6-App
        path: dist/  # 上传 dist 文件夹

  release:
    needs: build  # 等待 build 任务完成
    runs-on: windows-latest
    
    steps:
    
    # Step 1: 检查出代码（需要确保标签存在）
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Upload to GitHub Releases
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/main.exe"
        tag: ${{ github.ref_name }}  # 使用推送的标签
        name: "Release ${{ github.ref_name }}"
        body: "Release notes for version ${{ github.ref_name }}" # 提供附加的描述或说明
        token: ${{ secrets.RELEASE_TOKEN }}  # 使用 PAT 代替 GITHUB_TOKEN
        draft: false
        prerelease: false